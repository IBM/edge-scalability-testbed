---
- hosts: localhost
  gather_facts: no
  vars:
    region: "{{ region }}"
    cluster_ecs_name: "{{ ecs_cluster_name | default('devicesimulator') }}"
    task_name: "{{ ecs_task_name | default('devicesimulator') }}"
    container_name: "{{ ecs_container_name | default('devicesimulator') }}"
    devicesimulator_image: "{{ devicesimulator_image }}"
    credentials_image: "{{ credentials_image }}"
    num_replicas: "{{ replicas_count | default(1) }}"
  tasks:
    - include_vars: "../.data/{{ region }}_vpc_helper_vars.yaml"

    - name: Create a log group
      community.aws.cloudwatchlogs_log_group:
        log_group_name: "{{ task_name }}"
        region: "{{ region }}"
        state: present

    - name: Cluster creation
      community.aws.ecs_cluster:
        name: "{{ cluster_ecs_name }}"
        region: "{{ region }}"
        state: present

    - name: Create task definition
      community.aws.ecs_taskdefinition:
        family: "{{ task_name }}"
        region: "{{ region }}"
        containers:
        - name: "{{ container_name }}"
          image: "{{ devicesimulator_image }}" 
          essential: true
          entryPoint:
          - /devicesimulator
          command:
          - --kubeconf=/kube/kube.conf
          - --namespace=default
          - --ca-cert-file=/tls/ca.crt
          - --ca-key-file=/tls/ca.key
          - -device-extra-labels=region=us-east-1
          - --metrics-bind-address=0.0.0.0:8080
          - --device-server=https://a8acbc4b70edc25f0.awsglobalaccelerator.com:31033
          - --fetch-spec-interval=60s
          - --status-update-interval=60s
          - --num=100
          - -zap-time-encoding=rfc3339nano
          - -zap-log-level=10
          volumesFrom:
          - sourceContainer: credentials
          logConfiguration:
            logDriver: awslogs
            options:
              awslogs-group: "{{ task_name }}"
              awslogs-region: "{{ region }}"
              awslogs-stream-prefix: ecs
        - name: credentials
          essential: false
          image: "{{ credentials_image }}"
        launch_type: FARGATE
        cpu: 512
        memory: 1GB
        state: present
        network_mode: awsvpc
        execution_role_arn: ecsTaskExecutionRole
      register: task_definition_output

    - name: Debug Task Definition
      ansible.builtin.debug:
        msg: "{{ task_definition_output }}"

    # Basic provisioning example
    - name: Provisioning ECS Service
      community.aws.ecs_service:
        state: present
        region: "{{ region }}"
        name: "{{ task_name }}-service"
        cluster:  "{{ cluster_ecs_name }}"
        task_definition: "{{ task_name }}"
        desired_count: "{{ num_replicas }}"
        launch_type: FARGATE
        network_configuration:
          assign_public_ip: no
          subnets:
          - "{{ private_subnet_id }}"
      register: ecs_service_output

    - name: Debug ECS Service
      ansible.builtin.debug:
        msg: "{{ ecs_service_output }}"

    - name: Create vars file to help with deletion of resources
      ansible.builtin.copy:
        content: "cluster_name: {{ cluster_ecs_name }}\ntask_name: {{ task_name }}\ncontainerName: {{ container_name }}"
        dest: "../.data/{{ region }}_{{ cluster_ecs_name }}_agent_helper_vars.yaml"